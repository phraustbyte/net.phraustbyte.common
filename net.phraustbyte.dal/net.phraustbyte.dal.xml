<?xml version="1.0"?>
<doc>
    <assembly>
        <name>net.phraustbyte.dal</name>
    </assembly>
    <members>
        <member name="T:net.phraustbyte.dal.IBaseDAL">
            <summary>
            Represents a connection to a data source
            </summary>
        </member>
        <member name="M:net.phraustbyte.dal.IBaseDAL.Create``1(``0)">
            <summary>
            Creates a record in a database
            </summary>
            <typeparam name="T"></typeparam>
            <param name="Obj"></param>
            <returns></returns>
        </member>
        <member name="M:net.phraustbyte.dal.IBaseDAL.Update``1(``0)">
            <summary>
            Updates a record in a database
            </summary>
            <typeparam name="T"></typeparam>
            <param name="Obj"></param>
            <returns></returns>
        </member>
        <member name="M:net.phraustbyte.dal.IBaseDAL.Delete``1(``0)">
            <summary>
            Deletes a record in a database
            </summary>
            <typeparam name="T"></typeparam>
            <param name="Obj"></param>
            <returns></returns>
        </member>
        <member name="M:net.phraustbyte.dal.IBaseDAL.ReadAll``1">
            <summary>
            Reads all records in a database
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:net.phraustbyte.dal.IBaseDAL.Read``1(System.Guid)">
            <summary>
            Reads a single record in a database
            </summary>
            <typeparam name="T"></typeparam>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="P:net.phraustbyte.dal.IBaseDAL.ConnectionString">
            <summary>
            Represents a connection string to a datasource
            </summary>
        </member>
        <member name="P:net.phraustbyte.dal.IBaseDAL.Query">
            <summary>
            Represents a query command or name of a stored procedure
            </summary>
        </member>
        <member name="M:net.phraustbyte.dal.IBaseDAL.GetParameters``1(``0)">
            <summary>
            Generates a list of parameters based on an object
            </summary>
            <typeparam name="T"></typeparam>
            <param name="Obj"></param>
            <returns></returns>
        </member>
        <member name="M:net.phraustbyte.dal.IBaseDAL.ReadAllByFilter``2(``1,System.String)">
            <summary>
            Reads records based on filter criteria
            </summary>
            <typeparam name="TOut"></typeparam>
            <typeparam name="TParam"></typeparam>
            <param name="FilterValue"></param>
            <param name="FilterKey"></param>
            <returns></returns>
        </member>
        <member name="T:net.phraustbyte.dal.RecordNotFoundException">
            <summary>
            Represents an exception generated when a record is not found
            </summary>
        </member>
        <member name="M:net.phraustbyte.dal.RecordNotFoundException.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:net.phraustbyte.dal.RecordNotFoundException.#ctor(System.String)">
            <summary>
            Default constructor
            </summary>
            <param name="message">Message that describes the error</param>
        </member>
        <member name="M:net.phraustbyte.dal.RecordNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Default Constructor
            </summary>
            <param name="message">Message that describes the error</param>
            <param name="inner">The exception that is the cause of the current exception</param>
        </member>
        <member name="T:net.phraustbyte.dal.SqlHelper">
            <summary>
            Helper Classes for the DAL
            </summary>
        </member>
        <member name="F:net.phraustbyte.dal.SqlHelper.typeMap">
            <summary>
            Dictionary of SQL DB Types
            </summary>
        </member>
        <member name="M:net.phraustbyte.dal.SqlHelper.#cctor">
            <summary>
            Create and populate the dictionary in the static constructor
            </summary>
        </member>
        <member name="M:net.phraustbyte.dal.SqlHelper.GetDbType(System.Type)">
            <summary>
            Gets equivelant SQLDataType from specified Type
            </summary>
            <param name="giveType"></param>
            <returns>SqlDataType</returns>
        </member>
        <member name="M:net.phraustbyte.dal.SqlHelper.GetDbType``1">
            <summary>
            Gets SqlDBType from Type T
            </summary>
            <typeparam name="T"></typeparam>
            <returns>SQLDataType</returns>
        </member>
        <member name="M:net.phraustbyte.dal.SqlHelper.TranslateResults``1(System.Data.IDataReader)">
            <summary>
            Translates an IDataReader objet into an object
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
    </members>
</doc>
